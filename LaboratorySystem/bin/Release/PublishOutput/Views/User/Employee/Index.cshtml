@{
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
    ViewBag.Title = "Add or Update Employees";
}



<script>
    var currentmenu = 2;
    $(document).ready(function () {
        var query = getUrlVars();
        if (query["IsEdit"] != null) {
            if (query["IsEdit"] == "1" && query["EditId"] != null) {
                $("#mainheading").html("Update Employee");
                $("#subheading").html("Update Employee");
                $("#cardheading").html("Edit Employee");
                $("#cancelbtn").hide();
                $("#saveorupdatebtn").text("Update");

                $("#editid").val(query["EditId"]);
                $("#employeeid").val(query["EditId"]);

                MakeRequest(_User_Employee_Get, "POST", objectifyForm($("#employeeform").serializeArray()), "json",
    function (jqXHR, settings) {
        //For Before Send
        $('.loadscreen').fadeIn();
    },
    function (data, status, xhr) {
        //For Success
        $('.loadscreen').fadeOut();
        var rs = WebResponse(data);
        if (rs.ResponseType == "Simple") {
            var dt_clientuser = rs.ResponseData.clientuserjson;
            var dt_assignedrolesjson = rs.ResponseData.assignedrolesjson;
            var dt_attachmentsjson = rs.ResponseData.attachmentsjson;

            $("#username").val(dt_clientuser.Username);
            $("#username").attr("disabled", "disabled");
            $("#firstname").val(dt_clientuser.FirstName);
            $("#lastname").val(dt_clientuser.LastName);
            $("#email").val(dt_clientuser.Email);
            $("#mobileno").val(dt_clientuser.MobileNo);
            $("#address").val(dt_clientuser.Address);
            $("#status").val((dt_clientuser.IsActive==1?"true":"false"));
            $("#employeetype").val(dt_clientuser.DetailType);
            $("#joiningdate").val(dt_clientuser.JoiningDateCustom);
            $("#qualifications").val(dt_clientuser.Qualifications);
            

            
            var editselectedvalues = "";

            $.each(dt_assignedrolesjson, function (i, e) {
                $("#assignedrolesid_temp option[value='" + e.RoleID + "']").prop("selected", true);
                
                editselectedvalues += e.RoleID + ",";
            });

            
            $("#assignedrolesid").val(editselectedvalues.replace(/,\s*$/, ""));

            ShowElementByTypeID($("#employeetype").val());
            ShowElementByRolesReturn($("#assignedrolesid").val());
            ShowTerminationSection($("#status").val());

            if (dt_clientuser.TerminationDateCustom != null) {
                $("#terminationdate").val(dt_clientuser.TerminationDateCustom);
            }

            if (dt_clientuser.TerminationReason != null) {
                $("#terminationreason").val(dt_clientuser.TerminationReason);
            }
            if (dt_clientuser.TypeOfCollection != null) {
                $("#typeofcollection").val(dt_clientuser.TypeOfCollection);
            }
            if (dt_clientuser.License != null) {
                $("#license").val(dt_clientuser.License);
            }
            if (dt_clientuser.IsFullTime != null) {
                $("#employementtype").val((dt_clientuser.IsFullTime == 1 ? "true" : "false"));
            }
            
            if (dt_attachmentsjson != null) {
                
                var html = '';
                $.each(dt_attachmentsjson, function (i, e) {

                    html+='<div class="col-md-2 col-4 attachmentbox">\
                                    <div class="mb-4">\
                                        <p class="text-primary mb-1">\
                                        <i class="i-Close text-16 mr-1 delattachment" style="cursor:pointer" title="Delete attachment" data-id="'+e.AttachmentID+'"></i><a href="'+e.Link+'" target="_blank"> '+e.AttachmentName+'</a></p>\
                                    </div>\
                                </div>'
                });
                $("#attachmentlist").html(html);
                $(".attachmentsection").show();

            }
            else {
                $(".attachmentsection").hide();
            }

        }
    },
function (jqXhr, textStatus, errorMessage) {
    //For Error
    $('.loadscreen').fadeOut();
    WebResponse(new { ResponseType: "toastr-error", description: "CL-Error", title: "Something went wrong (C)", data: {} });
});
            }
        }

        @{
            LaboratoryBusiness.Repositories.User.IRoleRepository role = ((DBInitializer)ViewBag.currentdomaindb).RoleRepository();
            var roles = role.GetAll().Where(x => !(x.RoleName.Equals("Admin") || x.RoleName.Equals("Patient"))).ToList();


        }

        
    })
</script>
@{
    LaboratoryBusiness.Repositories.User.IClientUserTypeRepository usertypes = ((DBInitializer)ViewBag.currentdomaindb).ClientUserTypeRepository();
    var allusertypes = usertypes.GetAll().Where(x => !(x.TypeName.Equals("Client Admin") || x.TypeName.Equals("Patient"))).ToList();

    LaboratoryBusiness.Repositories.User.IAdminDetailRepository admindetail = ((DBInitializer)ViewBag.currentdomaindb).AdminDetailRepository();
    LaboratoryBusiness.POCO.User.Cl_AdminDetail _addetail = admindetail.GetAll().FirstOrDefault();

    LaboratoryBusiness.Repositories.Admin.ISystemUserRepository su = new LaboratoryBusiness.BLL.Admin.SystemUserRepository();
    LaboratoryBusiness.POCO.Admin.SystemUser supoco = su.GetByID(_addetail.SystemClientID.Value);

    LaboratoryBusiness.Repositories.Admin.IClientRepository cl = new LaboratoryBusiness.BLL.Admin.ClientRepository();
    LaboratoryBusiness.POCO.Admin.Client clpoco = cl.GetByID(supoco.DetailID.Value);
}
<div class="breadcrumb">
    <h1 class="mr-2" id="mainheading">Create Employee</h1>
    <ul>
        <li><a href="">Employee</a></li>
        <li id="subheading">Create Employee</li>
    </ul>
</div>

<div class="separator-breadcrumb border-top"></div>
<div class="2-columns-form-layout">
    <div class="">
        <div class="row">
            <div class="col-lg-12">
                <!--begin::form 3 Horizontal-->
                <form id="employeeform" name="employeeform">
                    <!-- start card 3 Columns Horizontal Form Layout-->
                    <div class="card ul-card__margin-25">
                        <div class="card-header bg-transparent">
                            <h3 class="card-title" id="cardheading">Add Employee</h3>
                        </div>

                        <div class="card-body">
                            <div class="form-group row">
                                <label for="employeetype" class="ul-form__label ul-form--margin col-lg-1 col-form-label ">Employee Type:</label>
                                <div class="col-lg-3">


                                    <select class="form-control" id="employeetype" name="employeetype">
                                        @{

                                            foreach (var usertype in allusertypes)
                                            {
                                                <option value="@usertype.ClientUserTypeID">@usertype.TypeName</option>
                                            }

                                        }
                                    </select>


                                    <small id="employeetypeHelpBlock" class="ul-form__text form-text ">
                                        Please select employee type
                                    </small>
                                </div>
                                <label for="firstname" class="ul-form__label ul-form--margin col-lg-1   col-form-label ">
                                    First Name:
                                </label>
                                <div class="col-lg-3 ">
                                    <input type="text" class="form-control" id="firstname" name="firstname" required="required" placeholder="Enter first name">
                                    <small id="firstnamehelpblock" class="ul-form__text form-text ">
                                        Please enter first name
                                    </small>
                                </div>

                                <label for="lastname" class="ul-form__label ul-form--margin col-lg-1   col-form-label ">
                                    Last Name:
                                </label>
                                <div class="col-lg-3 ">
                                    <input type="text" class="form-control" id="lastname" name="lastname" required="required" placeholder="Enter last name">
                                    <small id="lastnamehelpblock" class="ul-form__text form-text ">
                                        Please enter last name
                                    </small>
                                </div>
                            </div>



                            <div class="custom-separator"></div>

                            <div class="form-group row">
                                <label for="email" class="ul-form__label ul-form--margin col-lg-1   col-form-label ">
                                    Email:
                                </label>
                                <div class="col-lg-3 ">
                                    <input type="email" class="form-control" id="email" name="email" required="required" placeholder="Enter email">
                                    <small id="emailhelpblock" class="ul-form__text form-text ">
                                        Please enter email
                                    </small>
                                </div>

                                <label for="mobileno" class="ul-form__label ul-form--margin col-lg-1   col-form-label ">
                                    Mobile No:
                                </label>
                                <div class="col-lg-3 ">
                                    <input type="text" class="form-control" id="mobileno" name="mobileno" required="required" placeholder="Enter mobile no">
                                    <small id="mobilenohelpblock" class="ul-form__text form-text ">
                                        Please enter mobile no
                                    </small>
                                </div>

                                <label for="address" class="ul-form__label ul-form--margin col-lg-1 col-form-label ">Address:</label>
                                <div class="col-lg-3">
                                    <textarea class="form-control" id="address" name="address" placeholder="Enter address"></textarea>
                                    <small id="addressBlock" class="ul-form__text form-text ">
                                        Please enter address
                                    </small>
                                </div>

                            </div>

                            <div class="custom-separator"></div>

                            <div class="form-group row">
                                <label for="status" class="ul-form__label ul-form--margin col-lg-1 col-form-label ">Status:</label>
                                <div class="col-lg-3">


                                    <select class="form-control" id="status" name="status">
                                        <option value="true">Active</option>
                                        <option value="false">Inactive</option>
                                    </select>


                                    <small id="statusHelpBlock" class="ul-form__text form-text ">
                                        Please select status
                                    </small>
                                </div>


                                <label for="username" class="ul-form__label ul-form--margin col-lg-1   col-form-label ">
                                    Username:
                                </label>
                                <div class="col-lg-3 ">
                                    <input type="text" class="form-control" id="username" name="username" required="required" placeholder="Enter username">
                                    <small id="usernamehelpblock" class="ul-form__text form-text ">
                                        Please enter username (@@@clpoco.CompanyName.Replace(" ", "").Trim());
                                    </small>
                                </div>

                                <label for="assignedrolesid_temp" class="ul-form__label ul-form--margin col-lg-1 col-form-label ">Additional Role's:</label>
                                <div class="col-lg-3">
                                    <select class="form-control" id="assignedrolesid_temp" name="assignedrolesid_temp" multiple>
                                        @{

                                            foreach (var currentrole in roles)
                                            {
                                                <option value="@currentrole.RoleID">@currentrole.RoleName</option>
                                            }

                                        }

                                    </select>
                                    <small id="assignedrolesid_tempBlock" class="ul-form__text form-text ">
                                        Please select roles to assign
                                    </small>
                                </div>

                            </div>

                            <div class="custom-separator"></div>

                            <div class="form-group row">
                                <label for="attachmentfiles" class="ul-form__label ul-form--margin col-lg-1 col-form-label ">Attachment Files:</label>
                                <div class="col-lg-3">
                                    <input type="file" id="attachmentfiles" name="attachmentfiles" multiple />
                                    <small id="attachmentfilesBlock" class="ul-form__text form-text ">
                                        upload attachment files
                                    </small>
                                </div>

                                <label for="joiningdate" class="ul-form__label ul-form--margin col-lg-1   col-form-label ">
                                    Joining Date:
                                </label>
                                <div class="col-lg-3 ">
                                    <input type="date" class="form-control" id="joiningdate" value="@DateTime.Now.ToString("yyyy-MM-dd")" name="joiningdate" required="required" placeholder="Select joining date">
                                    <small id="joiningdatehelpblock" class="ul-form__text form-text ">
                                        Please select joining date
                                    </small>
                                </div>

                                <label for="qualifications" class="ul-form__label ul-form--margin col-lg-1 col-form-label ">Qualification:</label>
                                <div class="col-lg-3">
                                    <textarea class="form-control" id="qualifications" name="qualifications" placeholder="Enter qualifications"></textarea>
                                    <small id="qualificationsBlock" class="ul-form__text form-text ">
                                        Please enter qualifications
                                    </small>
                                </div>
                            </div>

                            <div class="custom-separator"></div>

                            <div class="form-group row">
                                <label style="display:none" for="typeofcollection" class="ul-form__label ul-form--margin col-lg-1 col-form-label typeofcollectiondiv">Type Of Collection:</label>
                                <div class="col-lg-3 typeofcollectiondiv" style="display:none">
                                    <textarea class="form-control" id="typeofcollection" name="typeofcollection" placeholder="Enter type of collection"></textarea>
                                    <small id="typeofcollectionBlock" class="ul-form__text form-text ">
                                        Please enter type of collection
                                    </small>
                                </div>

                                <label style="display:none" for="license" class="ul-form__label ul-form--margin col-lg-1   col-form-label licensediv">
                                    License:
                                </label>
                                <div class="col-lg-3 licensediv" style="display:none">
                                    <input type="text" class="form-control" id="license" name="license" required="required" placeholder="Enter license">
                                    <small id="licensehelpblock" class="ul-form__text form-text ">
                                        Please enter license
                                    </small>
                                </div>

                                <label style="display:none" for="employementtype" class="ul-form__label ul-form--margin col-lg-1 col-form-label employementtypediv">Employement Type:</label>
                                <div class="col-lg-3 employementtypediv" style="display:none">


                                    <select class="form-control" id="employementtype" name="employementtype">
                                        <option value="true">Full-time</option>
                                        <option value="false">Part-time</option>
                                    </select>


                                    <small id="employementtypeHelpBlock" class="ul-form__text form-text ">
                                        Please select employement type
                                    </small>
                                </div>

                            </div>

                            <div class="custom-separator"></div>

                            <div class="form-group row">

                                <label style="display:none" for="terminationdate" class="ul-form__label ul-form--margin col-lg-1   col-form-label terminationdatediv">
                                    Termination Date:
                                </label>
                                <div style="display:none" class="col-lg-3 terminationdatediv">
                                    <input type="date" class="form-control" id="terminationdate" value="@DateTime.Now.ToString("yyyy-MM-dd")" name="terminationdate" required="required" placeholder="Select termination date">
                                    <small id="terminationdatehelpblock" class="ul-form__text form-text ">
                                        Please select termination date
                                    </small>
                                </div>

                                <label style="display:none" for="terminationreason" class="ul-form__label ul-form--margin col-lg-1   col-form-label terminationreasondiv">
                                    Termination Reason:
                                </label>
                                <div style="display:none" class="col-lg-3 terminationreasondiv">
                                    <textarea class="form-control" id="terminationreason" name="terminationreason" placeholder="Enter termination reason"></textarea>
                                    <small id="terminationreasonhelpblock" class="ul-form__text form-text ">
                                        Please enter termination reason
                                    </small>
                                </div>
                            </div>

                            <div class="custom-separator attachmentsection" style="display:none"></div>
                            <div class="card-header bg-transparent attachmentsection" style="display:none">
                                <h3 class="card-title">Attachments</h3>
                            </div>
                            <div class="row attachmentsection" style="display:none" id="attachmentlist">
                            </div>

                        </div>
                        <div class="card-footer">
                            <div class="mc-footer">
                                <div class="row text-center">
                                    <div class="col-lg-12 ">
                                        <button type="submit" class="btn btn-primary m-1" id="saveorupdatebtn">Save</button>
                                        <button type="reset" class="btn btn-outline-secondary m-1" id="cancelbtn">Reset</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- end card 3 Columns Horizontal Form Layout-->
                    <input type="hidden" id="editid" name="editid" value="0" />
                    <input type="hidden" id="assignedrolesid" name="assignedrolesid" value="0" />
                    <input type="hidden" id="employeeid" name="employeeid" value="0" />
                </form>
                <!-- end::form 3-->





            </div>

        </div>
    </div>
</div>
<script>
    var roleshtml = "";
    function ShowElementByTypeID(typeid) {
        if(typeid==2) {
            $("#assignedrolesid_temp").html(roleshtml);

            $("#assignedrolesid_temp option[value='"+typeid+"']").remove();

            $(".typeofcollectiondiv").hide();
            $(".licensediv").hide();
            $(".employementtypediv").hide();

            $("#typeofcollection").val("");
            $("#license").val("");
            $("#license").removeAttr("required");
            $("#employementtype").val("true");
        }
        else if(typeid==3) {
            $("#assignedrolesid_temp").html(roleshtml);

            $("#assignedrolesid_temp option[value='"+typeid+"']").remove();

            $(".typeofcollectiondiv").show();
            $(".licensediv").show();
            $(".employementtypediv").hide();

            $("#typeofcollection").val("");
            $("#license").val("");
            $("#license").attr("required","required");
            $("#employementtype").val("true");
        }
        else if(typeid==4){
            $("#assignedrolesid_temp").html(roleshtml);

            $("#assignedrolesid_temp option[value='"+typeid+"']").remove();

            $(".typeofcollectiondiv").hide();
            $(".licensediv").show();
            $(".employementtypediv").hide();

            $("#typeofcollection").val("");
            $("#license").val("");
            $("#license").attr("required","required");
            $("#employementtype").val("true");
        }
        else if(typeid==5){
            $("#assignedrolesid_temp").html(roleshtml);

            $("#assignedrolesid_temp option[value='"+typeid+"']").remove();

            $(".typeofcollectiondiv").hide();
            $(".licensediv").hide();
            $(".employementtypediv").show();

            $("#typeofcollection").val("");
            $("#license").val("");
            $("#license").removeAttr("required");
            $("#employementtype").val("true");
        }
        else if(typeid==6){
            $("#assignedrolesid_temp").html(roleshtml);

            $("#assignedrolesid_temp option[value='"+typeid+"']").remove();

            $(".typeofcollectiondiv").hide();
            $(".licensediv").hide();
            $(".employementtypediv").hide();

            $("#typeofcollection").val("");
            $("#license").val("");
            $("#license").removeAttr("required");
            $("#employementtype").val("true");
        }
        else if(typeid==7){
            $("#assignedrolesid_temp").html(roleshtml);

            $("#assignedrolesid_temp option[value='"+typeid+"']").remove();

            $(".typeofcollectiondiv").hide();
            $(".licensediv").hide();
            $(".employementtypediv").hide();

            $("#typeofcollection").val("");
            $("#license").val("");
            $("#license").removeAttr("required");
            $("#employementtype").val("true");
        }
    }

    function ShowElementByRoles(roles) {

        $(".typeofcollectiondiv").hide();
        $(".licensediv").hide();
        $(".employementtypediv").hide();

        $("#typeofcollection").val("");
        $("#license").val("");
        $("#license").removeAttr("required");
        $("#employementtype").val("true");

        ShowElementByTypeID($("#employeetype").val());

        var selectedvalues = roles;
        selectedvalues.forEach(function(item,index) {
            if(item==3) {

                $(".typeofcollectiondiv").show();
                $(".licensediv").show();
                $("#license").attr("required","required");
            }
            else if(item==2) {
            }
            else if(item==6) {
            }
            else if(item==7) {
            }
            else if(item==4) {
                $(".licensediv").show();
                $("#license").attr("required","required");
            }
            else if(item==5) {
                $(".employementtypediv").show();
            }
        })
        $("#assignedrolesid_temp").val(selectedvalues);
        $("#assignedrolesid").val(selectedvalues);
    }

    function ShowElementByRolesReturn(roles) {

        $(".typeofcollectiondiv").hide();
        $(".licensediv").hide();
        $(".employementtypediv").hide();

        $("#typeofcollection").val("");
        $("#license").val("");
        $("#license").removeAttr("required");
        $("#employementtype").val("true");

        ShowElementByTypeID($("#employeetype").val());

        var selectedvalues = roles;
        selectedvalues = selectedvalues.split(',');
        selectedvalues.forEach(function (item, index) {
            if (item == 3) {

                $(".typeofcollectiondiv").show();
                $(".licensediv").show();
                $("#license").attr("required", "required");
            }
            else if (item == 2) {
            }
            else if (item == 6) {
            }
            else if (item == 7) {
            }
            else if (item == 4) {
                $(".licensediv").show();
                $("#license").attr("required", "required");
            }
            else if (item == 5) {
                $(".employementtypediv").show();
            }
        })
        $("#assignedrolesid_temp").val(selectedvalues);
        $("#assignedrolesid").val(selectedvalues);
    }

    function ShowTerminationSection(status) 
    {
        if(status=="true") {
            $("#terminationreason").val("");
            $("#terminationdate").val("@DateTime.Now.ToString("yyyy-MM-dd")");

            $(".terminationreasondiv").hide();
            $(".terminationdatediv").hide();
        }
        else {
            $("#terminationreason").val("");
            $("#terminationdate").val("@DateTime.Now.ToString("yyyy-MM-dd")");

            $(".terminationreasondiv").show();
            $(".terminationdatediv").show();
        }
    }

    $(document).ready(function () {
        roleshtml= $("#assignedrolesid_temp").html();
        ShowElementByTypeID($("#employeetype").val());
        ShowElementByRoles($("#assignedrolesid_temp").val());
        ShowTerminationSection($("#status").val());
        

        $("#employeetype").change(function() {
            ShowElementByTypeID($(this).val());
            $("#assignedrolesid").val("");
        });

        $("#status").change(function() {
            ShowTerminationSection($(this).val());
        });

        $("#assignedrolesid_temp").change(function() {
            ShowElementByRoles($(this).val());
        })

        $("#saveorupdatebtn").click(function () {
            var form = document.querySelector('#employeeform');
            if (form.reportValidity()) {
                var isupdate = false;
                var _posturl = _User_Employee_Create;
                if ($("#editid").val() > 0) {
                    _posturl = _User_Employee_Update;
                    isupdate = true;
                }
                MakeRequest(_posturl, "POST", objectifyForm($("#employeeform").serializeArray()), "json",
                    function (jqXHR, settings) {
                        //For Before Send
                        $('.loadscreen').fadeIn();
                    },
                    function (data, status, xhr) {
                        //For Success

                        

                        var rs = WebResponse(data);
                        if (rs.ResponseType == "Simple" || rs.ResponseType == "swal-warning") {



                            // Checking whether FormData is available in browser  
                            if (window.FormData !== undefined) {

                                var fileUpload = $("#attachmentfiles").get(0);
                                var files = fileUpload.files;

                                if (files.length > 0) {
                                    // Create FormData object  
                                    var fileData = new FormData();

                                    // Looping over all files and add it to FormData object  
                                    for (var i = 0; i < files.length; i++) {
                                        fileData.append(files[i].name, files[i]);
                                    }

                                    // Adding one more key to FormData object  
                                    fileData.append('UserDetailID', rs.ResponseData.clientuserdetailjson.UserDetailID);
                                    fileData.append('IsUpdated', isupdate);

                                    $.ajax({
                                        url: _User_Employee_UploadFile,
                                        type: "POST",
                                        contentType: false, // Not to set any content header  
                                        processData: false, // Not to process data  
                                        data: fileData,
                                        success: function (result) {
                                            //swal.fire({ title: "Created Successfully !", icon: "success", html: "Employee has been created successfully<br>" });
                                            $('.loadscreen').fadeOut();
                                            $("#employeeform").trigger("reset");
                                            WebResponse(result);
                                            if (rs.ResponseData.clientuserjson.IsActive == true) {
                                                setTimeout(function () {
                                                    window.location.replace("/User/Employee/ActiveEmployees");
                                                }, 2500);
                                            }
                                            else {
                                                setTimeout(function () {
                                                    window.location.replace("/User/Employee/InactiveEmployees");
                                                }, 2500);
                                            }
                                        },
                                        error: function (err) {
                                            $('.loadscreen').fadeOut();
                                            $("#employeeform").trigger("reset");
                                            WebResponse(new { ResponseType: "toastr-error", description: errorMessage, title: "Something went wrong (C)", data: {} });
                                            if (!isupdate) {
                                                swal.fire({ title: "Created Successfully !", icon: "success", html: "Employee has been created successfully<br>" });
                                            }
                                            else {
                                                swal.fire({ title: "Updated Successfully !", icon: "success", html: "Employee has been updated successfully<br>" });
                                            }
                                            if (rs.ResponseData.clientuserjson.IsActive == true) {
                                                setTimeout(function () {
                                                    window.location.replace("/User/Employee/ActiveEmployees");
                                                }, 2500);
                                            }
                                            else {
                                                setTimeout(function () {
                                                    window.location.replace("/User/Employee/InactiveEmployees");
                                                }, 2500);
                                            }
                                        }
                                    });
                                }
                                else {
                                    $("#employeeform").trigger("reset");
                                    $('.loadscreen').fadeOut();
                                    if (!isupdate) {
                                        swal.fire({ title: "Created Successfully !", icon: "success", html: "Employee has been created successfully<br>" });
                                    }
                                    else {
                                        swal.fire({ title: "Updated Successfully !", icon: "success", html: "Employee has been updated successfully<br>" });
                                    }
                                    if (rs.ResponseData.clientuserjson.IsActive == true) {
                                        setTimeout(function () {
                                            window.location.replace("/User/Employee/ActiveEmployees");
                                        }, 2500);
                                    }
                                    else {
                                        setTimeout(function () {
                                            window.location.replace("/User/Employee/InactiveEmployees");
                                        }, 2500);
                                    }
                                }
                            } else {
                                $("#employeeform").trigger("reset");
                                $('.loadscreen').fadeOut();
                                swal.fire({ title: "Not supported !", icon: "error", html: "Sorry file upload not supported in this browser." });
                                if (!isupdate) {
                                    swal.fire({ title: "Created Successfully !", icon: "success", html: "Employee has been created successfully<br>" });
                                }
                                else {
                                    swal.fire({ title: "Updated Successfully !", icon: "success", html: "Employee has been updated successfully<br>" });
                                }
                                if (rs.ResponseData.clientuserjson.IsActive == true) {
                                    setTimeout(function () {
                                        window.location.replace("/User/Employee/ActiveEmployees");
                                    }, 2500);
                                }
                                else {
                                    setTimeout(function () {
                                        window.location.replace("/User/Employee/InactiveEmployees");
                                    }, 2500);
                                }
                            }

                        }
                        $('.loadscreen').fadeOut();
                    },
                function (jqXhr, textStatus, errorMessage) {
                    //For Error
                    $('.loadscreen').fadeOut();
                    WebResponse(new { ResponseType: "toastr-error", description: errorMessage, title: "Something went wrong (C)", data: {} });
                });
            }
            return false;
        });

        $(document).on('click', '.delattachment', function () {
            var mythis = $(this);
            var dataid = $(this).attr("data-id");
            swal.fire({
                title: "Are you sure?",
                text: "Do you want to delete this attachment!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: 'Yes, I am sure!',
                cancelButtonText: 'No, cancel it!',
                preConfirm: function () {
                    MakeRequest(_User_Employee_DeleteFile, "POST", { "attachmentid": dataid }, "json",
function (jqXHR, settings) {
    //For Before Send
    $('.loadscreen').fadeIn();
},
function (data, status, xhr) {
    //For Success
    $('.loadscreen').fadeOut();
    var rs = WebResponse(data);

    if (rs.ResponseType == "toastr-sucsess") {
        mythis.parents(".attachmentbox").get(0).remove();
    }

},
function (jqXhr, textStatus, errorMessage) {
    //For Error
    $('.loadscreen').fadeOut();
    WebResponse(new { ResponseType: "toastr-error", description: "CL-Error", title: "Something went wrong (C)", data: {} });
});
                }
            })

        });
    })
</script>
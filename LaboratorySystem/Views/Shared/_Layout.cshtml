<!DOCTYPE html>
<html lang="en" dir="">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>IndoUKLabs System | @ViewBag.Title </title>
    <link rel="shortcut icon" href="/Content/MainWebsite/assets/img/logo/logo.png" />
    <link href="https://fonts.googleapis.com/css?family=Nunito:300,400,400i,600,700,800,900" rel="stylesheet">
    <link rel="stylesheet" href="~/Content/styles/css/themes/lite-purple.min.css">
    <link rel="stylesheet" href="~/Content/styles/vendor/perfect-scrollbar.css">
    <link rel="stylesheet" href="~/Content/styles/vendor/datatables.min.css">
    <link rel="stylesheet" href="~/Content/styles/css/themes/lite-purple.min.css">

    <link href="~/Content/styles/css/themes/lite-purple.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/Content/styles/vendor/toastr.css" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.0.12/dist/css/select2.min.css" rel="stylesheet" />
    @*<link rel="stylesheet" href="~/Content/styles/vendor/sweetalert2.min.css" />*@
    <style>
        .loadscreen {
            text-align: center;
            position: fixed;
            width: 100%;
            left: 0;
            right: 0;
            margin: auto;
            top: 0;
            height: 100vh;
            background: #ffffff;
            opacity: 0.7;
        }

            .loadscreen .loader {
                position: absolute;
                top: calc(50vh - 50px);
                left: 0;
                right: 0;
                margin: auto;
            }

            .loadscreen .logo {
                display: inline-block !important;
                width: 80px;
                height: 80px;
            }
            .subdomain-selcted-navitem{
                background-color:#f44336;
            }

            .subdomain-selcted-navitem a {
                color:white !important;
            }

            .subdomain-selcted-navitem a i {
                color:white !important;
            }


            
            
            .active-selected {
                color:#fff;
                border-left:3px solid #751212;
            }

            .dark-purple, .sidebar-dark-purple .sidebar-left{
                background:#f44336 !important;
            }
    </style>

    <!-- ============ Search UI End ============= -->
    <script src="~/Scripts/js/vendor/apexcharts.dataseries.js"></script>
    <script src="~/Scripts/js/vendor/jquery-3.3.1.min.js "></script>
    <script src="~/Scripts/js/vendor/bootstrap.bundle.min.js "></script>
    <script src="~/Scripts/js/vendor/perfect-scrollbar.min.js "></script>
    <script src="~/Scripts/js/vendor/echarts.min.js "></script>
    <script src="~/Scripts/js/vendor/datatables.min.js"></script>
    <script src="~/Scripts/js/es5/echart.options.min.js"></script>
    <script src="~/Scripts/js/es5/dashboard.v4.script.min.js "></script>
    <script src="~/Scripts/js/es5/script.min.js"></script>
    @*<script src="~/Scripts/js/es5/sidebar.large.script.min.js"></script>*@
    <script src="~/Scripts/js/es5/sidebar.compact.script.min.js"></script>
    <script src="~/Scripts/js/es5/customizer.script.min.js"></script>
    <script src="~/Scripts/js/vendor/toastr.min.js"></script>
    <script src="~/Scripts/js/toastr.script.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.0.12/dist/js/select2.min.js"></script>
    @*<script src="~/Scripts/js/sweetalert.script.js"></script>*@
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/Custom/General.js"></script>

    <script>
        function getUrlVars() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }


        function SectionRestriction(callback) {
            if (typeof currentmenu !== 'undefined') {
                if (currentmenu != null) {
                    MakeRequest(_Admin_Account_SectionRestriction, "POST", { menuid: currentmenu }, "json",
                function (jqXHR, settings) {
                    //For Before Send
                    if (!($(".loadscreen").is(":visible"))) {
                        $('.loadscreen').fadeIn();
                    }
                },
                function (data, status, xhr) {
                    //For Success
                    var dt = WebResponse(data);
                    if (dt.ResponseData != null) {
                        if (dt.ResponseData.SectionList != null) {
                            for (i = 0; i < dt.ResponseData.SectionList.length ; i++) {
                                $(dt.ResponseData.SectionList[i]).hide();
                            }
                        }
                    }
                    $("#mainbody").css("visibility", "visible");
                    callback();
                    $('.loadscreen').fadeOut();

                },
            function (jqXhr, textStatus, errorMessage) {
                //For Error
                $("#mainbody").css("visibility", "visible");
                callback();
                $('.loadscreen').fadeOut();

                WebResponse(new { ResponseType: "toastr-error", description: errorMessage, title: "Something went wrong (C)", data: {} });
            });
                }
            }
        }

        $(function() {
            
        });

    </script>

    @RenderSection("ScriptSection", required: false)

</head>
@{
    string path = HttpContext.Current.Request.Url.LocalPath;
    path = path.ElementAt(path.Length - 1).Equals("//") ? path.Substring(0, path.Length - 1) : path;

    LaboratoryBusiness.Repositories.Admin.IMenuRepository mn = new LaboratoryBusiness.BLL.Admin.MenuRepository();
    var menus = mn.GetByLink(path);

    object currentmenu_parentid = 0;
    object currentmenu_id = 0;
    
    if (menus.Count() > 0)
    {
        currentmenu_parentid = menus.FirstOrDefault().ParentID.HasValue ? menus.FirstOrDefault().ParentID.Value : 0;
        currentmenu_id = menus.FirstOrDefault().MenuID;
    }
}
<body class="text-left">
    <div id="mainbody" style="visibility:hidden">
        <div class="app-admin-wrap layout-sidebar-compact sidebar-dark-purple sidenav-open clearfix">
            <div class="side-content-wrap">
                <div class="sidebar-left open rtl-ps-none" data-perfect-scrollbar data-suppress-scroll-x="true">
                    <ul class="navigation-left">
                        @{var renderingmenus = MySession.SystemSession.MenuPriority == MenuPriorityEnum.Employee ? MySession.SystemSession.AssignedMenus : MySession.SystemSession.CurrentRole.AssignedMenus;}
                        @{var firstmenu = MySession.SystemSession.CurrentRole.IsActive == true || MySession.SystemSession.MenuPriority == MenuPriorityEnum.Employee ? renderingmenus.Where(x => x.IsViewable == true && x.ParentID.HasValue == false).FirstOrDefault() : null;}
                        @{var filteredmenus = renderingmenus.Where(x => x.IsViewable == true && x.ParentID.HasValue == false).ToList(); }
                        @{var filteredchildmenus = MySession.SystemSession.CurrentRole.IsActive == true || MySession.SystemSession.MenuPriority == MenuPriorityEnum.Employee ? renderingmenus.Where(x => x.IsViewable == true && x.ParentID.HasValue == true).ToList() : new List<LaboratoryBusiness.POCO.Admin.Menu>(); }
                        @{bool isanymenupage = false;}
                        @if (firstmenu != null)
                        {
                            var attr = filteredchildmenus.Where(x => (x.ParentID.HasValue == false ? 0 : x.ParentID.Value) == firstmenu.MenuID).Count() > 0 ? ((object)firstmenu.MenuID) : null;

                            if (attr.ToString() == currentmenu_id.ToString() || attr.ToString() == currentmenu_parentid.ToString())
                            {
                                isanymenupage = true;
                            }

                            <li class='first-nav nav-item @(attr.ToString() == currentmenu_id.ToString() || attr.ToString() == currentmenu_parentid.ToString() ? "active-selected" : "")' data-item="@attr">
                                <a class="nav-item-hold" href="@firstmenu.Link">
                                    <i class="@firstmenu.Icon"></i>
                                    <span class="nav-text">@firstmenu.MenuName</span>
                                </a>
                                <div class="triangle"></div>
                            </li>

                        }
                            @for (int i = 1; i < filteredmenus.Count; i++)
                            {
                                var attr2 = filteredchildmenus.Where(x => (x.ParentID.HasValue == false ? 0 : x.ParentID.Value) == filteredmenus[i].MenuID).Count() > 0 ? ((object)filteredmenus[i].MenuID) : null;

                                if (attr2.ToString() == currentmenu_id.ToString() || attr2.ToString() == currentmenu_parentid.ToString())
                                {
                                    isanymenupage = true;
                                }
                                
                                <li class='nav-item @(attr2.ToString() == currentmenu_id.ToString() || attr2.ToString() == currentmenu_parentid.ToString() ? "active-selected" : "")' data-item="@attr2">
                                    <a class="nav-item-hold" href="@filteredmenus[i].Link">
                                        <i class="@filteredmenus[i].Icon"></i>
                                        <span class="nav-text">@filteredmenus[i].MenuName</span>
                                    </a>
                                    <div class="triangle"></div>
                                </li>
                            }
                        

                    </ul>
                </div>
                <div class="sidebar-left-secondary rtl-ps-none" data-perfect-scrollbar data-suppress-scroll-x="true">
                    <i class="sidebar-close i-Close" (click)="toggelSidebar()"></i>
                    <header>
                        <div class="logo">
                            <img  src="/Content/MainWebsite/assets/img/logo/logo.png" alt="">
                        </div>
                    </header>
                    <!-- Submenu Dashboards -->
                    @{ var distinctparents = filteredchildmenus.Select(x => x.ParentID.Value).Distinct();}
                    @foreach (var pid in @distinctparents)
                    {
                        var _childmenus = filteredchildmenus.Where(x => x.ParentID.Value == pid).ToList();
                        var _parentmenu = filteredmenus.Where(x => x.MenuID == pid).FirstOrDefault();
                        <div class="submenu-@pid submenu-area" data-parent="@pid" style='display:@(pid == Convert.ToInt32(currentmenu_id) || pid == Convert.ToInt32(currentmenu_parentid) ? "block;" : "none;")'>
                            <header>
                                <h6>@_parentmenu.MenuName</h6>
                                <p></p>
                            </header>
                            <ul class="childNav" data-parent="@pid">
                                @foreach (var menu in _childmenus)
                                {
                                    <li class="nav-item @(menu.MenuID == Convert.ToInt32(currentmenu_id) || menu.MenuID == Convert.ToInt32(currentmenu_parentid) ? "subdomain-selcted-navitem" : "")">
                                        <a href="@menu.Link">
                                            <i class="@menu.Icon"></i>
                                            <span class="item-name">@menu.MenuName</span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                            <!-- Submenu Dashboards -->

                        </div>
            </div>

            <!--=============== Left side End ================-->
            <!-- ============ Body content start ============= -->

            <div class="main-content-wrap d-flex flex-column">
                <div class="main-header">
                    <div class="logo">
                        <img src="/Content/MainWebsite/assets/img/logo/logo.png" alt="">
                    </div>
                    <div class="menu-toggle">
                        <div></div>
                        <div></div>
                        <div></div>
                    </div>
                    <div class="d-flex align-items-center">
                        <!-- Mega menu -->
                        <!-- / Mega menu -->
                        <!--Search Bar-->
                        <!-- / Search Bar-->
                    </div>
                    <div style="margin: auto"></div>
                    <div class="header-part-right">
                        <!-- Full screen toggle -->
                        <i class="i-Full-Screen header-icon d-none d-sm-inline-block" data-fullscreen></i>
                        <!-- Grid menu Dropdown -->
                        <div class="dropdown widget_dropdown">
                            <i class="i-Safe-Box text-muted header-icon" id="dropdownMenuButton" data-toggle="dropdown" title="My Roles" aria-haspopup="true" role="button" aria-expanded="false"></i>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" x-placement="top-start" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-47px, -282px, 0px);">
                                <div class="menu-icon-grid">
                                    @if (MySession.SystemSession.MenuPriority == MenuPriorityEnum.Employee)
                                    {
                                        <a href="#" style="background:#639;color:#fff;" data-id="@MySession.SystemSession.SystemUserID"><i class="i-Checked-User"></i> Individual</a>
                                    }

                                    @if (MySession.SystemSession.AssignedMenus.Count > 0 && MySession.SystemSession.MenuPriority != MenuPriorityEnum.Employee)
                                    {
                                        <a href="#" class="rolebtnchange" data-type="Employee" data-id="@MySession.SystemSession.SystemUserID"><i class="i-Checked-User"></i> Individual</a>
                                    }

                                    @foreach (var role in MySession.SystemSession.AssignedRoles.Where(x => x.IsActive == true))
                                    {
                                        if (role.RoleID == MySession.SystemSession.CurrentRole.RoleID && MySession.SystemSession.MenuPriority == MenuPriorityEnum.Role)
                                        {
                                            <a href="#" style="background:#639;color:#fff;" data-id="@role.RoleID"><i class="i-Settings-Window"></i> @role.RoleName</a>
                                        }

                                        else
                                        {
                                            <a href="#" class="rolebtnchange" data-type="Role" data-id="@role.RoleID"><i class="i-Settings-Window"></i>@role.RoleName </a>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        <!-- / Grid menu Dropdown -->
                        <!-- Notificaiton -->
                        @{
                            LaboratoryBusiness.Repositories.Admin.INotificationRepository notf = new LaboratoryBusiness.BLL.Admin.NotificationRepository();
                            var notifcounts = notf.GetAll().Where(x => x.EmployeeID == MySession.SystemSession.SystemUserID && (!x.Isviewed.HasValue || x.Isviewed.Value == false)).Count();
                            var totalcounts = notf.GetAll().Where(x => x.EmployeeID == MySession.SystemSession.SystemUserID).Count();
                        }
                        <div class="dropdown text-left">
                            <div class="badge-top-container" role="button" id="dropdownNotification" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @if (notifcounts > 0)
                                {
                                    <span class="badge badge-primary" id="newnotificationcount">@notifcounts.ToString()</span>
                                }
                                <i class="i-Bell text-muted header-icon"></i>
                            </div>
                            <!-- Notification dropdown -->
                            <div class="dropdown-menu dropdown-menu-right notification-dropdown rtl-ps-none" aria-labelledby="dropdownNotification" data-perfect-scrollbar data-suppress-scroll-x="true">

                                @{

                                    var topnotifications = notf.GetAll().Where(x => x.EmployeeID == MySession.SystemSession.SystemUserID).OrderByDescending(x => x.CreatedDatetime).Take(4).ToList();

                                    foreach (var notification in topnotifications)
                                    {
                                        <a href="@notification.ClickLink">
                                            <div class="dropdown-item d-flex notifslab">
                                                <div class="notification-icon">
                                                    <i class="@notification.Icon"></i>
                                                </div>
                                                <div class="notification-details flex-grow-1">
                                                    <p class="m-0 d-flex align-items-center">
                                                        <span style="margin-right:6px;">@notification.Title</span>
                                                        @if (!notification.Isviewed.Value)
                                                        {
                                                            <span class="badge badge-pill badge-primary ml-1 mr-1">new</span>
                                                        }
                                                        <span class="flex-grow-1"></span>
                                                        <span class="text-small text-muted ml-auto">@HelpingClass.Timeago(notification.CreatedDatetime.Value, DateTime.Now)</span>
                                                    </p>
                                                    <p class="text-small text-muted m-0">@notification.Description</p>
                                                </div>
                                            </div>
                                        </a>
                                    }
                                }

                                @if (totalcounts > 4)
                                {
                                    <div class="dropdown-item d-flex">
                                        <div class="notification-icon">

                                        </div>
                                        <div class="notification-details flex-grow-1">
                                            <button type="button" class="btn btn-success btn-icon m-1" id="showmorebtn" data-toggle="modal" data-target="#notificationmodel">
                                                <span class="ul-btn__icon"><i class="i-Loading"></i></span>
                                                <span class="ul-btn__text">Show more</span>
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <!-- Notificaiton End -->
                        <!-- User avatar dropdown -->
                        <div class="dropdown">
                            <div class="user colalign-self-end">
                                <img src='@(string.IsNullOrEmpty(MySession.SystemSession.ProfilePic)?"/Content/images/faces/1.png":MySession.SystemSession.ProfilePic.Replace("~",""))' id="userDropdown" alt="" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="userDropdown">
                                    <div class="dropdown-header">
                                        <i class="i-Lock-User mr-1"></i> @((string.IsNullOrEmpty(MySession.SystemSession.FirstName) ? "N/A" : MySession.SystemSession.FirstName) + " " + (string.IsNullOrEmpty(MySession.SystemSession.MiddleName) ? "N/A" : MySession.SystemSession.MiddleName) + " " + (string.IsNullOrEmpty(MySession.SystemSession.LastName) ? "N/A" : MySession.SystemSession.LastName))
                                    </div>
                                    <a class="dropdown-item" href="/Admin/Account/MyProfile">My Profile</a>
                                    <a class="dropdown-item" href="/Admin/Account/Logout">Logout</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!--=============== Left side End ================-->
                <!-- ============ Body content start ============= -->
                <div class="main-content">
                    @RenderBody()
                    <div class="separator-breadcrumb border-top"></div>


                    <!-- end of row-->
                    <!-- end of row-->
                    <!-- Footer Start -->
                    <div class="flex-grow-1 "></div>
                    <div class="app-footer ">
                        <div class="footer-bottom border-top pt-3 d-flex flex-column flex-sm-row align-items-center justify-content-center">


                            <div class="d-flex align-items-center" style="text-align: center;">
                                <img class="logo" src="/Content/MainWebsite/assets/img/logo/logo.png" alt="">
                                <div>

                                    <p class="m-0">© Copyright 2020 IndoUk Labs, Inc.</p>
                                    <p class="m-0">All rights reserved</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- fotter end -->
                </div>
                <!-- ============ Body content End ============= -->
            </div>

            <!-- ============ Body content End ============= -->
            </div>
        <!--=============== End app-admin-wrap ================-->

        <!-- ============ Search UI Start ============= -->

        <div class="search-ui">
            <div class="search-header">
                <img src="~/Content/images/logo.png" alt="" class="logo">
                <button class="search-close btn btn-icon bg-transparent float-right mt-2">
                    <i class="i-Close-Window text-22 text-muted"></i>
                </button>
            </div>
            <input type="text" placeholder="Type here" class="search-input" autofocus>
            <div class="search-title">
                <span class="text-muted">Search results</span>
            </div>
            <div class="search-results list-horizontal">
                <div class="list-item col-md-12 p-0">
                    <div class="card o-hidden flex-row mb-4 d-flex">
                        <div class="list-thumb d-flex">
                            <!-- TUMBNAIL -->
                            <img src="~/Content/images/products/headphone-1.jpg" alt="">
                        </div>
                        <div class="flex-grow-1 pl-2 d-flex">
                            <div class="card-body align-self-center d-flex flex-column justify-content-between align-items-lg-center flex-lg-row">
                                <!-- OTHER DATA -->
                                <a href="" class="w-40 w-sm-100">
                                    <div class="item-title">Headphone 1</div>
                                </a>
                                <p class="m-0 text-muted text-small w-15 w-sm-100">Gadget</p>
                                <p class="m-0 text-muted text-small w-15 w-sm-100">
                                    $300
                                    <del class="text-secondary">$400</del>
                                </p>
                                <p class="m-0 text-muted text-small w-15 w-sm-100 d-none d-lg-block item-badges">
                                    <span class="badge badge-danger">Sale</span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="list-item col-md-12 p-0">
                    <div class="card o-hidden flex-row mb-4 d-flex">
                        <div class="list-thumb d-flex">
                            <!-- TUMBNAIL -->
                            <img src="~/Content/images/products/headphone-2.jpg" alt="">
                        </div>
                        <div class="flex-grow-1 pl-2 d-flex">
                            <div class="card-body align-self-center d-flex flex-column justify-content-between align-items-lg-center flex-lg-row">
                                <!-- OTHER DATA -->
                                <a href="" class="w-40 w-sm-100">
                                    <div class="item-title">Headphone 1</div>
                                </a>
                                <p class="m-0 text-muted text-small w-15 w-sm-100">Gadget</p>
                                <p class="m-0 text-muted text-small w-15 w-sm-100">
                                    $300
                                    <del class="text-secondary">$400</del>
                                </p>
                                <p class="m-0 text-muted text-small w-15 w-sm-100 d-none d-lg-block item-badges">
                                    <span class="badge badge-primary">New</span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="list-item col-md-12 p-0">
                    <div class="card o-hidden flex-row mb-4 d-flex">
                        <div class="list-thumb d-flex">
                            <!-- TUMBNAIL -->
                            <img src="~/Content/images/products/headphone-3.jpg" alt="">
                        </div>
                        <div class="flex-grow-1 pl-2 d-flex">
                            <div class="card-body align-self-center d-flex flex-column justify-content-between align-items-lg-center flex-lg-row">
                                <!-- OTHER DATA -->
                                <a href="" class="w-40 w-sm-100">
                                    <div class="item-title">Headphone 1</div>
                                </a>
                                <p class="m-0 text-muted text-small w-15 w-sm-100">Gadget</p>
                                <p class="m-0 text-muted text-small w-15 w-sm-100">
                                    $300
                                    <del class="text-secondary">$400</del>
                                </p>
                                <p class="m-0 text-muted text-small w-15 w-sm-100 d-none d-lg-block item-badges">
                                    <span class="badge badge-primary">New</span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="list-item col-md-12 p-0">
                    <div class="card o-hidden flex-row mb-4 d-flex">
                        <div class="list-thumb d-flex">
                            <!-- TUMBNAIL -->
                            <img src="~/Content/images/products/headphone-4.jpg" alt="">
                        </div>
                        <div class="flex-grow-1 pl-2 d-flex">
                            <div class="card-body align-self-center d-flex flex-column justify-content-between align-items-lg-center flex-lg-row">
                                <!-- OTHER DATA -->
                                <a href="" class="w-40 w-sm-100">
                                    <div class="item-title">Headphone 1</div>
                                </a>
                                <p class="m-0 text-muted text-small w-15 w-sm-100">Gadget</p>
                                <p class="m-0 text-muted text-small w-15 w-sm-100">
                                    $300
                                    <del class="text-secondary">$400</del>
                                </p>
                                <p class="m-0 text-muted text-small w-15 w-sm-100 d-none d-lg-block item-badges">
                                    <span class="badge badge-primary">New</span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- PAGINATION CONTROL -->
            <div class="col-md-12 mt-5 text-center">
                <nav aria-label="Page navigation example">
                    <ul class="pagination d-inline-flex">
                        <li class="page-item">
                            <a class="page-link" href="#" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                                <span class="sr-only">Previous</span>
                            </a>
                        </li>
                        <li class="page-item"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item">
                            <a class="page-link" href="#" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                                <span class="sr-only">Next</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

        <!-- ============ Search UI End ============= -->

        <!-------------------------------------Previous-->
        </div>

    <div class="modal fade" id="notificationmodel" tabindex="-1" role="dialog" aria-labelledby="notificationmodeltitle-2" aria-hidden="true" style="display: none;">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenterTitle-2">Notifications</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body" id="notifmodalbody">


                </div>
            </div>
        </div>
    </div>

    <div class="loadscreen" style="display:none">
        <div class="loader">
            <img src="/Content/MainWebsite/assets/img/logo/logo.png" class="logo mb-3" alt="">
            <div class="loader-bubble loader-bubble-primary d-block"></div>
        </div>
    </div>


    <script>

        var realtime;
        $(document).ready(function () {

            @if(!isanymenupage) {
                <text>
            $(".first-nav").addClass("active");
                $(".submenu-"+($(".first-nav").attr("data-item"))).attr("style","display:block;");
                </text>
            }

            $('.subdomain-selcted-navitem').hover(function() {
                $('.subdomain-selcted-navitem').children('a').attr('style', 'color:#332e38 !important;');
                $('.subdomain-selcted-navitem').children('a').children('i').attr('style', 'color:#332e38 !important;');
            }, function() {
                // on mouseout, reset the background colour
                $('.subdomain-selcted-navitem a').removeAttr('style');
                $('.subdomain-selcted-navitem a i').removeAttr('style');
            });

            var interval = null;
            interval = setInterval(function () {
                if (typeof allloaded === 'undefined') {
                    clearInterval(interval);
                    if(typeof displaypanel === 'undefined') {
                        SectionRestriction(function() {});
                    }
                    else {
                        SectionRestriction(function() {$("#"+displaypanel).css("visibility","visible");});
                        
                    }

                }
                else {
                    if (allloaded) {
                        clearInterval(interval);
                        if(typeof displaypanel === 'undefined') {
                            SectionRestriction(function() {});
                        }
                        else {
                            SectionRestriction(function() {$("#"+displaypanel).css("visibility","visible");});
                        
                        }
                    }
                }


            }, 500);

            $("#dropdownNotification").click(function () {
                MakeRequest(_Admin_Account_UpdateNotification, "POST", { employeeid: @MySession.SystemSession.SystemUserID.ToString() }, "json",
    function (jqXHR, settings) {
        //For Before Send
        $('.loadscreen').fadeIn();
    },
    function (data, status, xhr) {
        //For Success
        $('.loadscreen').fadeOut();
        var rs = WebResponse(data);
        if (rs.ResponseType == "Simple") {
            var dt = rs.ResponseData.notifjson;
            if(dt.Count==0) {
                $("#newnotificationcount").text("");
            }
        }
    },
function (jqXhr, textStatus, errorMessage) {
    //For Error
    $('.loadscreen').fadeOut();
    WebResponse(new { ResponseType: "toastr-error", description: errorMessage, title: "Something went wrong (C)", data: {} });
});
            });

            $("#showmorebtn").click(function() {
                MakeRequest(_Admin_Account_MoreNotification, "POST", { employeeid: @MySession.SystemSession.SystemUserID.ToString() }, "json",
       function (jqXHR, settings) {
           //For Before Send
           $('.loadscreen').fadeIn();
       },
       function (data, status, xhr) {
           //For Success
           $('.loadscreen').fadeOut();
           var rs = WebResponse(data);
           if (rs.ResponseType == "Simple") {
               var dt = rs.ResponseData.morenotifjson;
               var a = '';
               var isviewed = '';
               dt.forEach(function (item, key) {
                   if(!item.Isviewed) {
                       isviewed = '<span class="badge badge-pill badge-primary ml-1 mr-1">new</span>'
                   }
                   else {
                       isviewed = '';
                   }
                   a = ' <a href="'+item.ClickLink+'">\
                        <div class="dropdown-item d-flex">\
                            <div class="notification-icon">\
                                <i class="'+item.Icon+'"></i>\
                            </div>\
                            <div class="notification-details flex-grow-1">\
                                <p class="m-0 d-flex align-items-center">\
                                    <span style="margin-right:6px;">'+item.Title+'</span>\
                                        '+isviewed+'\
                   <span class="flex-grow-1"></span>\
                   <span class="text-small text-muted ml-auto">'+item.TimeAgo+'</span>\
               </p>\
               <p class="text-small text-muted m-0">'+item.Description+'</p>\
           </div>\
       </div>\
   </a>\
   <br />'; 
                   $("#notifmodalbody").append(a);
               });
           }
       },
   function (jqXhr, textStatus, errorMessage) {
       //For Error
       $('.loadscreen').fadeOut();
       WebResponse(new { ResponseType: "toastr-error", description: errorMessage, title: "Something went wrong (C)", data: {} });
   });
            });

        $(".rolebtnchange").click(function () {
            MakeRequest(_Change_Admin_Account_Role, "POST", { id: $(this).attr("data-id"), type: $(this).attr("data-type") }, "json", 
                function (jqXHR, settings) {
                    //For Before Send
                    $('.loadscreen').fadeIn();
                },
                function (data, status, xhr) {
                    //For Success
                    $('.loadscreen').fadeOut();
                WebResponse(data);
                },
            function (jqXhr, textStatus, errorMessage) {
                //For Error
                $('.loadscreen').fadeOut();
                WebResponse(new { ResponseType: "toastr-error", description: errorMessage, title: "Something went wrong (C)", data: {} });
            });
            return false;
        })

        realtime = $.connection.realTimeHub;
        realtime.client.NewMessage = function (name, message) {
            // Html encode display name and message.
            if(("s-"+@MySession.SystemSession.SystemUserID)==name) {
                var obj = $.parseJSON(message);
                if(obj.ResponseType.includes("swal")) {
                    if (obj.ResponseType == "swal-sucsess") {
                        swal.fire({ title: obj.title, icon: "success", html: obj.description });
                    }


                    else if (obj.ResponseType == "swal-info") {
                        swal.fire({ title: obj.title, icon: "info", html: obj.description });
                    }


                    else if (obj.ResponseType == "swal-warning") {
                        swal.fire({ title: obj.title, icon: "warning", html: obj.description });
                    }


                    else if (obj.ResponseType == "swal-error") {
                        swal.fire({ title: obj.title, icon: "error", html: obj.description });
                    }


                    else if (obj.ResponseType == "swal-custom") {
        
                        swal.fire({ title: obj.title, html: obj.description });
                    }

                }
                else if(obj.ResponseType.includes("toastr")) {
                    if (obj.ResponseType == "toastr-error") {
                        toastr.error(obj.description, obj.title);
                    }

                    else if (obj.ResponseType == "toastr-sucsess") {
                        toastr.success(obj.description, obj.title);
                    }

                    else if (obj.ResponseType == "toastr-info") {
                        toastr.info(obj.description, obj.title);
                    }

                    else if (obj.ResponseType == "toastr-warning") {
                        toastr.warning(obj.description, obj.title);
                    }
                }

                var currentcount = parseInt($("#newnotificationcount").text()==""?0:$("#newnotificationcount").text());
                currentcount++;

                if(currentcount==1) {
                    var notifcounthtml = "<span class=\"badge badge-primary\" id=\"newnotificationcount\">1</span>";
                    $("#dropdownNotification").append(notifcounthtml);
                }
                $("#newnotificationcount").text(currentcount);

                if($(".notifslab").length >= 4){
                    var cc = $(".notifslab").length - 3;
                    for(i=1;i<=cc;i++) {
                        $(".notifslab").eq((i+2).toString()).remove();
                    }
                    
                }

                if(!obj.notification.Isviewed) {
                    isviewed = '<span class="badge badge-pill badge-primary ml-1 mr-1">new</span>'
                }
                else {
                    isviewed = '';
                }
                var a = ' <a href="'+obj.notification.ClickLink+'">\
                        <div class="dropdown-item d-flex notifslab">\
                            <div class="notification-icon">\
                                <i class="'+obj.notification.Icon+'"></i>\
                            </div>\
                            <div class="notification-details flex-grow-1">\
                                <p class="m-0 d-flex align-items-center">\
                                    <span style="margin-right:6px;">'+obj.notification.Title+'</span>\
                                        '+isviewed+'\
                   <span class="flex-grow-1"></span>\
                   <span class="text-small text-muted ml-auto">'+obj.notification.TimeAgo+'</span>\
               </p>\
               <p class="text-small text-muted m-0">'+obj.notification.Description+'</p>\
           </div>\
       </div>\
   </a>'; 

                $(".notification-dropdown").prepend(a);
                
            }
            
        };

        $.connection.hub.start().done(function () {
            //realtime.server.broadcast('', '');
            });
        });
    </script>

 <script>

     function ConvertDate(data) {
         var date = new Date(parseInt(data.substr(6)));
         var month = date.getMonth() + 1;
         return (month.length > 1 ? month : "" + month) + "/" + date.getDate() + "/" + date.getFullYear();
     }

    </script>

</body>
</html>